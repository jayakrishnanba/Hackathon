import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.Scanner;
import java.util.StringTokenizer;


public class relation {
	public static void reln(String BasDir){
		try{				
			String relation = "";
			String rel = "";
			String owlrel = "";
			File file = new File(BasDir + "/tfidf.txt"); 
			BufferedReader bf = new BufferedReader(new FileReader(file));
			Scanner sc = new Scanner(System.in);
			System.out.print("Enter the Support: ");
	        int support = sc.nextInt();
	        
	        System.out.print("Enter the Confidence: ");
	        int confidence = sc.nextInt();

			String str;
			
			while((str = bf.readLine()) != null){
				if(str.length()<2)					
					continue;
				//System.out.println(str);
				BufferedReader bf1 = new BufferedReader(new FileReader(file));
				String str1;
				while(str.compareToIgnoreCase(bf1.readLine()) != 0);
				while((str1 = bf1.readLine()) != null){					
					if(str1.length()<2)						
						continue;
					int c = 0;
					//c = conf.occur(str, str1, BasDir);
					int s = count.occur(str, str1,BasDir);
					
					if(s >= support && c < confidence){
						if(Search.doSearch(BasDir, str) < Search.doSearch(BasDir, str1)){
							//System.out.println();
						//System.out.println("yes");
						str = str.replaceAll(" ", "_");
						str1 = str1.replaceAll(" ", "_");
						 
						relation = str+" -> "+ str1 +";\n";
						System.out.print(relation);
						rel = rel + relation;
						owlrel = owlrel + "<owl:Class rdf:about=\"#"+ str +"\"> \n <rdfs:subClassOf rdf:resource=\"#"+str1+"\"/> \n  </owl:Class>\n \n";
						}
						else{
							//System.out.println("no");
							str = str.replaceAll(" ", "_");
							str1 = str1.replaceAll(" ", "_");
							 
							relation = str1+" -> "+ str +";\n";
							System.out.print(relation);
							rel = rel + relation;
							owlrel = owlrel + "<owl:Class rdf:about=\"#"+ str1 +"\"> \n <rdfs:subClassOf rdf:resource=\"#"+str+"\"/> \n  </owl:Class>\n \n";
						}
					}					
				}
				bf1.close();
			}
			bf.close();
			BufferedWriter re = new BufferedWriter(new FileWriter(BasDir + "/relation.dot",true));
			String start = "digraph graphname {\n";
			String end = "}";			
			re.write(start+rel+end);
			re.close();
			
			BufferedWriter bw = new BufferedWriter(new FileWriter(BasDir + "/relation.owl",true));
			String owlstart = "<?xml version=\"1.0\"?> \n \n <!DOCTYPE rdf:RDF [\n <!ENTITY owl \"http://www.w3.org/2002/07/owl#\" > \n <!ENTITY xsd \"http://www.w3.org/2001/XMLSchema#\" > \n <!ENTITY owl2xml \"http://www.w3.org/2006/12/owl2-xml#\" > \n <!ENTITY rdfs \"http://www.w3.org/2000/01/rdf-schema#\" > \n <!ENTITY rdf \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" > \n <!ENTITY Ontology1308217514066 \"http://www.semanticweb.org/ontologies/relation.owl#\" > \n ]> \n \n <rdf:RDF xmlns=\"http://www.semanticweb.org/ontologies/relation.owl#\" \n xml:base=\"http://www.semanticweb.org/ontologies/relation.owl\"  \n xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\" \n xmlns:owl2xml=\"http://www.w3.org/2006/12/owl2-xml#\" \n xmlns:owl=\"http://www.w3.org/2002/07/owl#\" \n xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\" \n xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" \n xmlns:relation=\"http://www.semanticweb.org/ontologies/relation.owl#\"> \n <owl:Ontology rdf:about=\"\"/>\n \n";
			String owlend = "</rdf:RDF>\n\n<!-- Generated by the system -->";
			bw.write(owlstart + owlrel + owlend);
			bw.close();
		}
		catch(Exception e){
			System.err.println("Error: "+e.getMessage());
			e.printStackTrace();
		}
	}
}